# -*- coding: utf-8 -*-
"""data producer

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VMhEoz4XAFQgXvdCBxnMMhVWFdv7lE33

# Sample Starter Code: Basic Stream Processing with Spark Streaming

Here's some sample code in Python using the kafka-python package for generating network traffic data and publishing it to the Kafka topic.
"""

!pip install confluent-Kafka

from confluent_kafka import Producer
import time
import random

# Kafka producer configuration
bootstrap_servers = 'pkc-6ojv2.us-west4.gcp.confluent.cloud:9092'
sasl_username = 'SWRA7ZIW7OJEIA5H'
sasl_password = '0NMea6IumwzM37kXrxR9G6RPo9OBkakfO8rfSmSv5SrOFGeRnLNNnL9hEIZumjDK'
topic_name = 'network-traffic'

conf = {
    'bootstrap.servers': bootstrap_servers,
    'security.protocol': 'SASL_SSL',
    'sasl.mechanisms': 'PLAIN',
    'sasl.username': sasl_username,
    'sasl.password': sasl_password
}

producer = Producer(conf)

# Generate and publish network traffic data to Kafka topic
while True:
    # Generate random network traffic data
    source_ip = '.'.join(str(random.randint(0, 255)) for _ in range(4))
    destination_ip = '.'.join(str(random.randint(0, 255)) for _ in range(4))
    bytes_sent = random.randint(1000, 100000)

    # Publish network traffic data to Kafka topic
    message = f"{source_ip},{destination_ip},{bytes_sent}".encode('utf-8')
    producer.produce(topic_name, value=message)

    # Wait for the message to be delivered to Kafka
    producer.flush()

    # Wait for 1 second before generating next network traffic data
    time.sleep(1)